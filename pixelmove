#include"SDL/SDL_image.h"
#include"SDL/SDL.h"
#include<assert.h>

SDL_Surface *image = NULL;
SDL_Surface *screen = NULL;
SDL_Event event;

SDL_Surface *initScreen(SDL_Surface *screen, char *title)
{
	int test = 1; /* assume success */

	/* Initialise SDL Video, returns a negative value if it fails */
	test = SDL_Init(SDL_INIT_VIDEO);

	if (test < 0) /* if it failed, print an error message */
	{
		printf("Could not initialize SDL: %s\n", SDL_GetError());
	}
	else
	{
		screen = SDL_SetVideoMode(1280, 720, 0, SDL_HWPALETTE);
	
		if (screen == NULL) /* if that failed, print an error message */
		{
			printf("Couldn't set screen mode to 640 x 480: %s\n", SDL_GetError());
			test = -1;
		}
		else
		{
			/* Set the screen title */
			SDL_WM_SetCaption(title, NULL);
		}
	}

	return screen;
}


void putpixel(SDL_Surface *screen, int x, int y, int color)
{
	unsigned int *ptr;
	int lineoffset;
	int locked = 0;

	/* if the screen needs locking, try to lock it */
	if (SDL_MUSTLOCK(screen)){ 
		locked = SDL_LockSurface(screen);
	}

	if(locked <0){
		printf("tried to lock screen surface but failed...\n");
	}
	else
	{
		/* get address of the pixels buffer in the surface */
		ptr = (unsigned int*)screen->pixels;
		assert(ptr!=0);
		/* find the correct address of the line according to our y coord */
		lineoffset = y * (screen->pitch / 4);
		/* change the appropriate pixel colour */
		ptr[lineoffset + x] = color;


	}
	
	/* if the screen needed locking then we need to unlock it */
	if (SDL_MUSTLOCK(screen)) SDL_UnlockSurface(screen);

}


void jump(int x,int y,int color){

	int i;

	for(i=0;i<50;i++){
	
	putpixel(screen,x,y,0x000000);
	y--;
	putpixel(screen,x,y,color);
	SDL_Flip(screen);
	SDL_Delay(100);

	}

	for(i=0;i<50;i++){

	putpixel(screen,x,y,0x000000);
	y++;
	putpixel(screen,x,y,color);
	SDL_Flip(screen);
	SDL_Delay(100);

	}
	
	return;
}

int main(){
	int input;
	int x = 400;
	int y = 400;
	int i;

	int keyheld[323];
	
	for(i=0;i<323;i++) keyheld[i] = 0;

	screen = initScreen(screen,"rectangle");

	if(screen != NULL){  /* if we created a screen then wait for user to ask to exit */
		
		putpixel(screen, x, y,0xFF0000);
		SDL_Flip(screen);
	
		while (input != SDLK_ESCAPE)
		{

		putpixel(screen, x, y,0x00FFFF);
		SDL_Flip(screen);

		
			if(SDL_PollEvent(&event)){
				if(event.type == SDL_QUIT) input = SDLK_ESCAPE;
			
				if(event.type == SDL_KEYDOWN){
					 keyheld[event.key.keysym.sym] = 1;
				//	if(event.key.keysym.sym == SDLK_UP) jump(x,y,0x00FFFF);
				}

				if(event.type == SDL_KEYUP) keyheld[event.key.keysym.sym] = 0;

				

			}
		
		putpixel(screen,x,y,0x000000); //remove the previous pixel first

				if(keyheld[SDLK_LEFT] == 1) x--;
				if(keyheld[SDLK_RIGHT] == 1) x++;
				if(keyheld[SDLK_UP] == 1) jump(x,y,0x00ffff);

			
			/* Sleep briefly to stop sucking up all the CPU time */
			SDL_Delay(16);
		}

	}

	SDL_Quit();
	return 0;

}
